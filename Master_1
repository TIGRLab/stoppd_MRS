#!/bin/bash

#MASTERSCRIPT 1

source /etc/profile.d/modules.sh
source /etc/profile.d/quarantine.sh
module load FSL/5.0.9
module load matlab/R2015b

  while :
  do

    echo "Which site's data do you want to work on (type MAS/NKI/CMH/PMC or exit): "
    read site

    case $site in

      #case 1

##START OF CAMH DATA=========================================================================
      #code overview: organizes files into correct formats and moves files around
      #also links to matlab script that performs gannet fitting and generates nifti file

      "CMH")
       echo "Now reading camh dataset"
       #user inputs
       ########### STOPPD dataset
       while :
       do
         echo "Enter the path of the STOPPD data folder: "
         read dataset
         if [ -d "${dataset}" ] ; then
             echo "$dataset is a directory";
             cd $dataset

             break;
         else
             echo "invalid path to dataset, please re-enter."
         fi
       done
       ############# Results folder for the dataset
         while :
         do
           echo "Choose a path of the results folder: "
           read results
           if [ -d "${results}" ] ; then
               echo "$results is a directory";
               cd $results

               break;
           else
               echo "invalid path, please re-enter."
           fi
         done
       ############# software that creates the header files
       while :
       do
         echo "Enter the path of the print_raw_headers software: "
         read software
         break;

       done

       #-------------------------------------------------------------------------------
       chmod 777 $dataset
       cd $dataset
       #(previously /projects/rutwik/2017/STOP-PD/new_tests/sample_set/)

       for directories in *;
       do
       #-------------------------------------------------------------------------------
         #PART A -- getting the .7 files into an output folder --> works


         #create a folder for results in local project folder

         #(previously cd /projects/rutwik/2017/STOP-PD/new_tests/sample_set_results/)
         cd $results
         mkdir 'output_'$directories

         #(previously   cd /projects/rutwik/2017/STOP-PD/new_tests/sample_set/$directories)
         cd $dataset/$directories

         #extract the .7 files into each subject's folder
         find . -name '*.7' -exec cp {} $results/'output_'$directories \;

         cd  $results/'output_'$directories


       #-------------------------------------------------------------------------------
       # PART B- unzipping required dicom folders and copying to local folder --> works

       #change directories to where the dicom data is stored
       cd /archive/data-2.0/STOPPD/data/dicom/

       #find each required file
       unzip $directories'.zip' -d $results/'output_'$directories

       #-------------------------------------------------------------------------------
       #PART C - getting the hdr files --> works

        cd $results/'output_'$directories


       # loop over all .7 files in the currect directory (depends on the # of voxels used)
       for seven in *.7;
       do
         # get the hdr file for each .7 file
         echo "done: " $seven
         $software $seven >$seven.hdr

         #create a text file that lists all the .hdr files that are extracted
         echo $seven "->" `grep -A2 "serrx" $seven.hdr` >>seriesnumber.txt
         done  # end of for loop for the .7

       #-------------------------------------------------------------------------------
       #PART D - copy the data to a more familiar naming convention that can be accessed later when necessary --> works

       for folder in ./*; do
         if [ -d $folder ];
         then mkdir ./'new_'$directories;
         mv $folder/* ./'new_'$directories;
         rm -rf $folder;
         fi;
       done
       #-------------------------------------------------------------------------------
       #PART E - making the new dcmdir2 & copying relevant files into it --> working

       #make the dcmdirectory 2
       mkdir $results/'output_'$directories/dcmdir2

       #isolate the series number, I need to use this to find the relavant folders
       for seven in *.7;
         do

           cd $results/'output_'$directories
           awk '/serrx/{getline; print}' $seven.hdr >isolated.txt

           #remove leading white spaces in the text file
           sed "s/^[ \t]*//" -i isolated.txt

           #also need to extract the series description i.e. is it ACC or dlpfc
           awk '/se_desc/{getline; print}' $seven.hdr >>$results/'output_'$directories/dcmdir2/voxel_description.txt


           #remove leading white spaces in the text file
           sed "s/^[ \t]*//" -i $results/'output_'$directories/dcmdir2/voxel_description.txt


           #reading the isolated text file line by line

           #modify permissions to access the isolate text file
           chmod 777 $results/'output_'$directories/isolated.txt

           #while loop to read line by line the series number to be extracted
           while read -r line;
           do
             #copy to dcmdir2
             cp -rf $results/'output_'$directories/'new_'$directories/*$line* $results/'output_'$directories/dcmdir2
           done <$results/'output_'$directories/isolated.txt


           #change directories to the ones containing the relavant dicom series subfolder
           cd $results/'output_'$directories/'new_'$directories


         done #end the .7 for loop

       #-------------------------------------------------------------------------------

       #PART F - dcmdir1 creation and copying data

         #need to get the bravo files recognized
         mkdir $results/'output_'$directories/dcmdir1

         #get to the new directory to get ready to copy over the dcmdir1
         cd $results/'output_'$directories/'new_'$directories


         #possibilities: (the bravo scans may be in either format, so have to account for both)
           #1. it is missing
           #2. format Ex06871_ Se00002_SagT1Bravo...
           #3. format Ex04027Se02

          find . -name '*Se02*' -exec cp {} $results/'output_'$directories/dcmdir1 \;

          find . -name '*Se00002*' -exec cp {} $results/'output_'$directories/dcmdir1 \;



         #make an output directory for the matlab script that will run after this one has been completed
         mkdir $results/'output_'$directories/from_matlab

       #-------------------------------------------------------------------------------

       #PART G - loop over all the header files to remove the ones that give back errors
       #these files must be removed so that they do not cause an error in the matlab script
       cd $results/'output_'$directories

           for headers in *.hdr;
            do


              if grep -q "Error" $headers;
                 then

                   newname="$(echo $headers | cut -d. -f1).7";
                 echo $newname "will be removed"
                 echo $headers "will be removed"

                 rm $newname
                 rm $headers
              fi
           done  # end of for loop for the headers

       #-------------------------------------------------------------------------------


       #do not split up the two lines below, they should be consecutive & sequential
       cd $dataset
       done


       #adding the matlab script to this
       while :
       do
         echo "Enter path of matlab dependencies: "
         read matlab_transfer
         if [ -d "${matlab_transfer}" ] ; then
             echo "$matlab_transfer is a directory";
             break;
         else
             echo "invalid path, please re-enter."
         fi
       done

       matlab -nodisplay -nosplash -r "addpath(genpath('$matlab_transfer')); matlab1_CMH; quit"

       ;;
##END OF CAMH DATA ======================================================================



##START OF MAS DATA ======================================================================
      "MAS")

       echo "Now reading MAS dataset"
       #adding the matlab script to this
       while :
       do
         echo "Enter path of matlab dependencies: "
         read matlab_transfer
         if [ -d "${matlab_transfer}" ] ; then
             echo "$matlab_transfer is a directory";
             break;
         else
             echo "invalid path, please re-enter."
         fi
       done

       matlab -nodisplay -nosplash -r "addpath(genpath('$matlab_transfer')); matlab1_MAS; quit"

       ;;
##END OF MAS DATA ======================================================================

##START OF NKI DATA ======================================================================
      "NKI")
       echo "Now reading NKI dataset"
       #adding the matlab script to this
       while :
       do
         echo "Enter path of matlab dependencies: "
         read matlab_transfer
         if [ -d "${matlab_transfer}" ] ; then
             echo "$matlab_transfer is a directory";
             break;
         else
             echo "invalid path, please re-enter."
         fi
       done

       matlab -nodisplay -nosplash -r "addpath(genpath('$matlab_transfer')); matlab1_NKI; quit"
       ;;
##END OF NKI DATA ======================================================================

##START OF PMC DATA ====================================================================

      "PMC")
       echo "Now reading PMC dataset"
       #adding the matlab script to this
       while :
       do
         echo "Enter path of matlab dependencies: "
         read matlab_transfer
         if [ -d "${matlab_transfer}" ] ; then
             echo "$matlab_transfer is a directory";
             break;
         else
             echo "invalid path, please re-enter."
         fi
       done

       matlab -nodisplay -nosplash -r "addpath(genpath('$matlab_transfer')); matlab1_PMC; quit"
       ;;
##END OF PMC DATA ======================================================================

       "exit")
        break;
        ;;

    esac

  done
